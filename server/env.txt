# =============================================================================
# Shopify Minis Server Environment Configuration
# =============================================================================
# 
# Copy these environment variables to your .env file or set them in your shell
# 
# =============================================================================

# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/shopify_minis

# Alternative database configurations:
# Local PostgreSQL with custom credentials:
# DATABASE_URL=postgresql://your_username:your_password@localhost:5432/shopify_minis

# Docker PostgreSQL:
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/shopify_minis

# Cloud database (e.g., Supabase, Railway, etc.):
# DATABASE_URL=postgresql://username:password@host:port/database_name

# Cloudflare R2 Storage Configuration
# -----------------------------------------------------------------------------
# Required: Your R2 endpoint URL
# Format: https://your-account-id.r2.cloudflarestorage.com
R2_ENDPOINT_URL=https://your-account-id.r2.cloudflarestorage.com

# Required: Your R2 access key ID
R2_ACCESS_KEY_ID=your-r2-access-key-id

# Required: Your R2 secret access key
R2_SECRET_ACCESS_KEY=your-r2-secret-access-key

# Required: Your R2 bucket name
R2_BUCKET_NAME=your-bucket-name

# Optional: Custom domain for public file URLs
# If not set, will use R2's default S3-style URLs
# Format: https://your-custom-domain.com
R2_PUBLIC_URL_BASE=https://your-custom-domain.com

# Server Configuration
# -----------------------------------------------------------------------------
# Server host (default: 0.0.0.0 for all interfaces)
HOST=0.0.0.0

# Server port (default: 8000)
PORT=8000

# Development mode (set to true for auto-reload)
DEBUG=true

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# Setup Instructions:
# =============================================================================
# 1. Create a .env file in your server directory
# 2. Copy the variables above to your .env file
# 3. Update the values with your actual configuration
# 4. Never commit your .env file to version control
# 5. For production, use secure environment variable management
#
# Database Setup Options:
# - Local PostgreSQL: brew services start postgresql && createdb shopify_minis
# - Docker: docker run --name postgres -e POSTGRES_DB=shopify_minis -p 5432:5432 -d postgres
# - Cloud: Use your cloud provider's PostgreSQL service
#
# R2 Setup:
# 1. Create a Cloudflare R2 bucket
# 2. Generate API tokens with R2 permissions
# 3. Update R2_* variables below
# 4. Optional: Configure custom domain for public file access
#
# Quick Start Commands:
# -----------------------------------------------------------------------------
# 1. Copy this file to .env:
#    cp env_config.txt .env
#
# 2. Edit .env with your actual values:
#    nano .env
#
# 3. Start the server:
#    uv run python main.py
#    # or
#    uv run uvicorn main:app --host 0.0.0.0 --port 8000 --reload
# ============================================================================= 